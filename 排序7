7.给定一个未排序的数列，找到此数列在已排序状态下的两个相邻值的最大差值，少于两个值时返回0。例如：给定数列 [1,3,2,0,1,6,8] 则 最大差值为3。注意：请尽量使用时间复杂度为O(n)的方案。
#include<iostream>
#include<algorithm>
using namespace std;
int main()
{
    int n;
    cin>>n;
    int a[n+1],i,j;
    for(i=0;i<n;i++)
        cin>>a[i];
    int b[n+1];
    sort(a,a+n);
    for(i=0;i<n-1;i++)
    {
        b[i]=a[i+1]-a[i];
    }
    int max=b[0];
    for(i=0;i<n-1;i++)
        if(max<b[i])
            max=b[i];
    printf("%d",max);
    return 0;
}
答题思路：这个题思路我觉得大部分人看了都知道，就是排序后然后算出相邻数字的差，然后在这些差中找到最大值最后输出，不过
这个题之前我写的时候用c语言选择排序一直超时，然后今天在了解到sort函数之后我用c++试了一下，就通过了，以后可以多了解一
下这些库函数，不仅缩减了代码而且复杂度也降低了。
