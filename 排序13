13. 有一个整数数组，请编写一个函数，找出索引m和n，只要将m和n之间的元素排好序，整个数组就是有序的。注意：n-m应该越小越好，也就是说，找出符合条件的最短序列。
给定一个int数组A和数组的大小n，请返回一个二元组，代表所求序列的起点和终点。(原序列位置从0开始标号,若原序列有序，返回[0,0])。保证A中元素均为正整数。
class Rearrange {
public:
    vector<int> findSegment(vector<int> A, int n) {
        vector<int> B=A;//定义了和同类型的数组
        sort(B.begin(),B.end());//对B进行排序
        vector<int> result;
        if(B==A)
        {
            result.push_back(0);
            result.push_back(0);
            return result;
        }
        int a,b;
        for(int i=0;i<n;i++)
            if(B[i]!=A[i])
            {
                a=i;
                result.push_back(a);
                break;
            }//找到结果的起点
        for(int i=n-1;i>=0;i--)
            if(B[i]!=A[i])
            {
                b=i;
                result.push_back(b);
                break;
            }//找到结果的终点
        return result;
    }
};
答题思路：这题我首先定义了一个和A同类型的数组B来进行排序操作，然后将B和A比较，找到他们是从哪里开始不一样的，然后也是这个方法找到终点，
有一个需要注意的是题目说的如果顺序一开始就是好的需要输出[0,0]，这个需要写一下。
