6. 有一堆箱子，每个箱子宽为wi，长为di，高为hi，现在需要将箱子都堆起来，而且为了使堆起来的箱子不倒，上面的箱子的宽度和长度必须小于下面的箱子。请实现一个方法，求出能堆出的最高的高度，这里的高度即堆起来的所有箱子的高度之和。
给定三个int数组w,l,h，分别表示每个箱子宽、长和高，同时给定箱子的数目n。请返回能堆成的最高的高度。保证n小于等于500。
class Box {
public:
    int getHeight(vector<int> w, vector<int> l, vector<int> h, int n) {
        // write code here
        int i,j;
        for(i=0;i<n-1;i++)
            for(j=i+1;j<n;j++)
                if(w[i]<w[j])
                {
                    swap(w[i],w[j]);
                    swap(l[i],l[j]);
                    swap(h[i],h[j]);
                }//按宽从大到小排序，以便后面比较
        int a[n];//n个箱子的最大高
        a[0]=h[0];//第一个箱子最大的高肯定是自身的高
        int maxh=a[0];
        for(i=1;i<n;i++)
        {
            a[i]=h[i];//最大高至少大于等于最底下箱子的高
            for(j=0;j<i;j++)//在前面宽更小的箱子里面选择适合条件的箱子
            {
                if(w[j]>w[i]&&l[j]>l[i])
                    a[i]=max(a[i],a[j]+h[i]);//如果满足条件就不停的加上高
            }
            maxh=max(maxh,a[i]);//不断更新最大值
        }
        return maxh;
    }
};
答题思路：这题首先根据各个箱子的宽进行从大到小排序，我排序用的选择排序，然后再定义一个数组用来装分别以不同不同箱子为第一个箱子时的最大高，然后再在这个数组里面求最大值。
