有个小孩正在上楼梯，楼梯有n阶台阶，小孩一次可以上1阶、2阶、3阶。请实现一个方法，计算小孩有多少种上楼的方式。为了防止溢出，请将结果Mod 1000000007
给定一个正整数int n，请返回一个数，代表上楼的方式数。保证n小于等于100000。
class GoUpstairs {
public:
    int countWays(int n) {
        // write code here
        long A1=1,A2=2,A3=4,An;
        if(n<3)
            return n;
        if(n==3)
            return 4;
        else
        {
            for(int i=4;i<=n;i++)
            {
                An=(A1+A2+A3);
                A1=A2%1000000007;
                A2=A3%1000000007;
                A3=An%1000000007;
            }
            return An%1000000007;
        }
    }
};
答题思路：由题目找出来的规律f(1)=1,f(2)=2,f(3)=4,f(4)=f(1)+f(2)+f(3),…,f(n)=f(n-3)+f(n-2)+f(n-1),然后根据这个规律写代码，然后需要注意的一个问题是我用递归没过，显示超时
