逆运算的方法：
假设求4位数中第19个位置的数字。
① 19减去1  → 18
② 18 对3！作除法 → 得3余0
③  0对2！作除法 → 得0余0
④  0对1！作除法 → 得0余0
据上面的可知：
我们第一位数（最左面的数），比第一位数小的数有3个，显然 第一位数为→ 4
比第二位数小的数字有0个，所以 第二位数为→1
比第三位数小的数字有0个，因为1已经用过，所以第三位数为→2
第四位数剩下 3
该数字为  4123  (正解)

#include<stdio.h>

int main(void)
{
	int i, j, t, k, vst[8]={0};
	scanf("%d",&k);
    --k;
	int n;
	scanf("%d",&n);
	int JC[]={1,1,2,6,24,120,720};
	char s[5]={0};
    for (i=0; i<n; i++)
    {
        t = k/JC[n-i-1];
        for (j=1; j<=n; j++)
            if (!vst[j])
            {
                if (t == 0) break;
                --t;
            }
        s[i] = '0'+j;
        vst[j] = 1;
        k %= JC[n-i-1];
    }
	printf("%s",s);
	return 0;
}
